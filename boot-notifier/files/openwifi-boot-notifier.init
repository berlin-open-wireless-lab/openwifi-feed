#!/bin/sh /etc/rc.common
# Copyright (C) 2014 Alexander Couzens <lynxis@fe80.eu>

START=99
USE_PROCD=1

validate_openwifi_section()
{
  uci_validate_section openwifi server "${1}" \
    'address:string:openwifi' \ 
    'port:integer:openwifi' \
    'path:string:openwifi' 

  return $?
}

openwifi_config() {
  local cfg="$1"

  local address localaddress uuid hostname protocol

  validate_openwifi_section "${1}" || {
    echo "validation failed"
    return 1
  }
}

reload_service() {
  config_load openwifi
  # we only support one server atm!
  config_foreach openwifi_config server
}

service_triggers()
{
  procd_add_reload_trigger "openwifi"
  procd_add_validation validate_openwifi_section
}

start_service() {
  if grep -q 'flash_firmware' /proc/cmdline; then
    exit 0
  fi
  procd_open_instance
  procd_set_param command /sbin/openwific.sh -b -t 180

  # respawn automatically if something died, be careful if you have an alternative process supervisor
  # if process dies sooner than respawn_threshold, it is considered crashed and after 5 retries the service is stopped
  procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}

  procd_set_param file /etc/config/openwifi # /etc/init.d/your_service reload will restart the daemon if these files have changed
  procd_set_param netdev dev # likewise, except if dev's ifindex changes.
  procd_set_param stdout 1 # forward stdout of the command to logd
  procd_set_param stderr 1 # same for stderr
  procd_close_instance
}
